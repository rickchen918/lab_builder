--- 
- hosts: 127.0.0.1
  vars_files: 
    - ./var.yml
  tasks: 
    - name: deploy nsx manager1
      command: ovftool 
        --name={{m1.name}}
        --X:injectOvfEnv 
        --X:logFile=ovftool.log
        --allowExtraConfig 
        --datastore="{{common.datastore}}"
        --network="home_mgmt" 
        --acceptAllEulas 
        --noSSLVerify 
        --diskMode=thin 
        --powerOn 
        --prop:nsx_role="{{common.role}}"
        --prop:nsx_ip_0={{m1.ip}}
        --prop:nsx_netmask_0={{common.mask}}
        --prop:nsx_gateway_0={{common.gw}} 
        --prop:nsx_dns1_0={{common.dns}} 
        --prop:nsx_domain_0=rkc.local 
        --prop:nsx_ntp_0={{common.ntp}} 
        --prop:nsx_isSSHEnabled=True 
        --prop:nsx_allowSSHRootLogin=True
        --prop:nsx_passwd_0={{common.password}} 
        --prop:nsx_cli_passwd_0={{common.password}} 
        --prop:nsx_hostname={{m1.name}}
        --prop:nsx_cli_audit_passwd_0={{common.password}}
        "{{common.image}}"
        vi://"administrator@rkc.local":"Nicira123$"@vc.rkc.local/Home/host/cluster67
      tags: mgr

    - name: depploy nsx manager2
      command: ovftool
        --name={{m2.name}}
        --X:injectOvfEnv
        --X:logFile=ovftool.log
        --allowExtraConfig
        --datastore="{{common.datastore}}"
        --network="home_mgmt"
        --acceptAllEulas
        --noSSLVerify
        --diskMode=thin
        --powerOn
        --prop:nsx_role="{{common.role}}"
        --prop:nsx_ip_0={{m2.ip}}
        --prop:nsx_netmask_0={{common.mask}}
        --prop:nsx_gateway_0={{common.gw}}
        --prop:nsx_dns1_0={{common.dns}}
        --prop:nsx_domain_0=rkc.local
        --prop:nsx_ntp_0={{common.ntp}}
        --prop:nsx_isSSHEnabled=True
        --prop:nsx_allowSSHRootLogin=True
        --prop:nsx_passwd_0={{common.password}}
        --prop:nsx_cli_passwd_0={{common.password}}
        --prop:nsx_hostname={{m2.name}}
        --prop:nsx_cli_audit_passwd_0={{common.password}}
        "{{common.image}}"
        vi://"administrator@rkc.local":"Nicira123$"@vc.rkc.local/Home/host/cluster67
      tags: mgr

    - name: deploy nsx manager3
      command: ovftool
        --name={{m3.name}}
        --X:injectOvfEnv
        --X:logFile=ovftool.log
        --allowExtraConfig
        --datastore="{{common.datastore}}"
        --network="home_mgmt"
        --acceptAllEulas
        --noSSLVerify
        --diskMode=thin
        --powerOn
        --prop:nsx_role="{{common.role}}"
        --prop:nsx_ip_0={{m3.ip}}
        --prop:nsx_netmask_0={{common.mask}}
        --prop:nsx_gateway_0={{common.gw}}
        --prop:nsx_dns1_0={{common.dns}}
        --prop:nsx_domain_0=rkc.local
        --prop:nsx_ntp_0={{common.ntp}}
        --prop:nsx_isSSHEnabled=True
        --prop:nsx_allowSSHRootLogin=True
        --prop:nsx_passwd_0={{common.password}}
        --prop:nsx_cli_passwd_0={{common.password}}
        --prop:nsx_hostname={{m3.name}}
        --prop:nsx_cli_audit_passwd_0={{common.password}}
        "{{common.image}}"
        vi://"administrator@rkc.local":"Nicira123$"@vc.rkc.local/Home/host/cluster67
      tags: mgr	

    - name: deploy nsx edge1
      command: ovftool
        --name={{e1.name}}
        --deploymentOption=large
        --X:injectOvfEnv 
        --X:logFile=ovftool.log 
        --allowExtraConfig 
        --datastore="{{common.datastore}}"
        --net:"Network 0=home_mgmt" 
        --net:"Network 1=Trunk" 
        --net:"Network 2=Trunk"  
        --net:"Network 3=Trunk"  
        --acceptAllEulas 
        --noSSLVerify 
        --diskMode=thin 
        --powerOn 
        --prop:nsx_ip_0={{e1.ip}} 
        --prop:nsx_netmask_0={{common.mask}} 
        --prop:nsx_gateway_0={{common.gw}} 
        --prop:nsx_dns1_0={{common.dns}}
        --prop:nsx_domain_0=rkc.local
        --prop:nsx_ntp_0={{common.ntp}}  
        --prop:nsx_isSSHEnabled=True 
        --prop:nsx_allowSSHRootLogin=True 
        --prop:nsx_passwd_0={{common.password}} 
        --prop:nsx_cli_passwd_0={{common.password}} 
        --prop:nsx_hostname={{e1.name}}
        "{{common.edgeimage}}"
        vi://"administrator@rkc.local":"Nicira123$"@vc.rkc.local/Home/host/cluster67
      tags: edge

    - name: deploy nsx edge2
      command: ovftool
        --name={{e2.name}}
        --deploymentOption=large
        --X:injectOvfEnv 
        --X:logFile=ovftool.log 
        --allowExtraConfig 
        --datastore="{{common.datastore}}"
        --net:"Network 0=home_mgmt" 
        --net:"Network 1=Trunk" 
        --net:"Network 2=Trunk"  
        --net:"Network 3=Trunk"  
        --acceptAllEulas 
        --noSSLVerify 
        --diskMode=thin 
        --powerOn 
        --prop:nsx_ip_0={{e2.ip}} 
        --prop:nsx_netmask_0={{common.mask}} 
        --prop:nsx_gateway_0={{common.gw}} 
        --prop:nsx_dns1_0={{common.dns}}
        --prop:nsx_domain_0=rkc.local
        --prop:nsx_ntp_0={{common.ntp}}  
        --prop:nsx_isSSHEnabled=True 
        --prop:nsx_allowSSHRootLogin=True 
        --prop:nsx_passwd_0={{common.password}} 
        --prop:nsx_cli_passwd_0={{common.password}} 
        --prop:nsx_hostname={{e2.name}}
        "{{common.edgeimage}}"
        vi://"administrator@rkc.local":"Nicira123$"@vc.rkc.local/Home/host/cluster67
      tags: edge

#- hosts: nsxtn
#  gather_facts: no
#  vars_files:
#    - ./var.yml
#  tasks:
    - name: get cluster id on t-mgr1
      raw: get cluster status |find Cluster
      delegate_to: "{{m1.ip}}"
      register: id
      tags: config

    - debug:
        var: id.stdout_lines[0].split(":")[1]
      tags: config

# for debug      
# the get cluster id with filter returns the "id.stdout_lines[0]" "Cluster Id: 0768193e-5387-46b3-86b3-3f2cf03b34b6", which needs to be splited. 
# the return valuu stays on list[0], so it get list[0] and split with ":" condition can get cluster id in parsing 

    - name: get thumbprint on t-mgr1 
      raw: get certificate api thumbprint 
      delegate_to: "{{m1.ip}}"
      register: thumbprint
      tags: config 

    - debug: 
        var: thumbprint.stdout_lines[0]
      tags: config


    - name: join controller cluster 
      raw: join {{m1.ip}} cluster-id {{id.stdout_lines[0].split(":")[1]}} username {{common.user}} password {{common.password}} thumbprint {{thumbprint.stdout_lines[0]}}
      delegate_to: "{{item}}"
      register: join
      with_items: 
        - "{{m2.ip}}"
        - "{{m3.ip}}"
      tags: config

    - debug: 
        var: join
      tags: config

  
